version: "3.9"

services:
  db:
    image: postgres:17
    container_name: cliently_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cliently_fastapi_backend
    command: sh -c "alembic upgrade head && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      # args:           # Para build de producci√≥n.
      #   FASTAPI_URL: ${FASTAPI_URL}
    container_name: cliently_react_frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
    env_file:
      - .env
    depends_on:
      - backend
    restart: always

volumes:
  pg_data:
